{"remainingRequest":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/permission.js","dependencies":[{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/permission.js","mtime":1627015124583},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qYXJ2aXN5dS8wNV9ob2JiaWVzL0phcnZpc19BZG1pbi9mcm9udGVuZC92dWUtYWRtaW4tdGVtcGxhdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ25wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzJzsgLy8gcHJvZ3Jlc3MgYmFyIHN0eWxlCgppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGdldCB0b2tlbiBmcm9tIGNvb2tpZQoKaW1wb3J0IGdldFBhZ2VUaXRsZSBmcm9tICdAL3V0aWxzL2dldC1wYWdlLXRpdGxlJzsKTlByb2dyZXNzLmNvbmZpZ3VyZSh7CiAgc2hvd1NwaW5uZXI6IGZhbHNlCn0pOyAvLyBOUHJvZ3Jlc3MgQ29uZmlndXJhdGlvbgoKdmFyIHdoaXRlTGlzdCA9IFsnL2xvZ2luJ107IC8vIG5vIHJlZGlyZWN0IHdoaXRlbGlzdAoKcm91dGVyLmJlZm9yZUVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBoYXNUb2tlbiwgaGFzR2V0VXNlckluZm8sIF95aWVsZCRzdG9yZSRkaXNwYXRjaCwgcm9sZXMsIGFjY2Vzc1JvdXRlczsKCiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgogICAgICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc2V0IHBhZ2UgdGl0bGUKCiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOyAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgbG9nZ2VkIGluCgogICAgICAgICAgICBoYXNUb2tlbiA9IGdldFRva2VuKCk7CgogICAgICAgICAgICBpZiAoIWhhc1Rva2VuKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM2OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoISh0by5wYXRoID09PSAnL2xvZ2luJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gaWYgaXMgbG9nZ2VkIGluLCByZWRpcmVjdCB0byB0aGUgaG9tZSBwYWdlCiAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgIHBhdGg6ICcvJwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGhhc0dldFVzZXJJbmZvID0gc3RvcmUuZ2V0dGVycy5uYW1lOwoKICAgICAgICAgICAgaWYgKCFoYXNHZXRVc2VySW5mbykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzQ7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNDsKCiAgICAgICAgICAgIGlmICghKHN0b3JlLmdldHRlcnMucm91dGVzLmxlbmd0aCA9PT0gMCkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldEluZm8nKTsKCiAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICBfeWllbGQkc3RvcmUkZGlzcGF0Y2ggPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByb2xlcyA9IF95aWVsZCRzdG9yZSRkaXNwYXRjaC5yb2xlczsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3Blcm1pc3Npb24vZ2VuZXJhdGVSb3V0ZXMnLCByb2xlcyk7CgogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgYWNjZXNzUm91dGVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcm91dGVyLmFkZFJvdXRlcyhhY2Nlc3NSb3V0ZXMpOwogICAgICAgICAgICBuZXh0KCk7CgogICAgICAgICAgY2FzZSAyNToKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjc7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSAzMToKICAgICAgICAgICAgTWVzc2FnZS5lcnJvcihfY29udGV4dC50MCB8fCAnSGFzIEVycm9yJyk7CiAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CgogICAgICAgICAgY2FzZSAzNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM3OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDM2OgogICAgICAgICAgICAvKiBoYXMgbm8gdG9rZW4qLwogICAgICAgICAgICBpZiAod2hpdGVMaXN0LmluZGV4T2YodG8ucGF0aCkgIT09IC0xKSB7CiAgICAgICAgICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICAgICAgICAgIG5leHQoIi9sb2dpbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgMzc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxNCwgMjddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},{"version":3,"sources":["/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasGetUserInfo","getters","name","routes","length","dispatch","roles","accessRoutes","addRoutes","error","indexOf","afterEach"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB,C,CAA6B;;AAE7BR,MAAM,CAACS,UAAP;AAAA,qEAAkB,iBAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACd;AACAT,YAAAA,SAAS,CAACU,KAAV,GAFc,CAId;;AACAC,YAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CALc,CAOd;;AACME,YAAAA,QARQ,GAQGb,QAAQ,EARX;;AAAA,iBAUVa,QAVU;AAAA;AAAA;AAAA;;AAAA,kBAWNP,EAAE,CAACQ,IAAH,KAAY,QAXN;AAAA;AAAA;AAAA;;AAYN;AACAN,YAAAA,IAAI,CAAC;AAAEM,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACAf,YAAAA,SAAS,CAACgB,IAAV;AAdM;AAAA;;AAAA;AAgBAC,YAAAA,cAhBA,GAgBiBnB,KAAK,CAACoB,OAAN,CAAcC,IAhB/B;;AAAA,iBAiBFF,cAjBE;AAAA;AAAA;AAAA;;AAkBFR,YAAAA,IAAI;AAlBF;AAAA;;AAAA;AAAA;;AAAA,kBAsBMX,KAAK,CAACoB,OAAN,CAAcE,MAAd,CAAqBC,MAArB,KAAgC,CAtBtC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuB8BvB,KAAK,CAACwB,QAAN,CAAe,cAAf,CAvB9B;;AAAA;AAAA;AAuBcC,YAAAA,KAvBd,yBAuBcA,KAvBd;AAAA;AAAA,mBAwBiCzB,KAAK,CAACwB,QAAN,CAAe,2BAAf,EAA4CC,KAA5C,CAxBjC;;AAAA;AAwBYC,YAAAA,YAxBZ;AAyBM3B,YAAAA,MAAM,CAAC4B,SAAP,CAAiBD,YAAjB;AACAf,YAAAA,IAAI;;AA1BV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBA8BQX,KAAK,CAACwB,QAAN,CAAe,iBAAf,CA9BR;;AAAA;AA+BEvB,YAAAA,OAAO,CAAC2B,KAAR,CAAc,eAAS,WAAvB;AACAjB,YAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,YAAAA,SAAS,CAACgB,IAAV;;AAjCF;AAAA;AAAA;;AAAA;AAsCV;AAEA,gBAAIX,SAAS,CAACsB,OAAV,CAAkBpB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACnC;AACAN,cAAAA,IAAI;AACP,aAHD,MAGO;AACH;AACAA,cAAAA,IAAI,2BAAoBF,EAAE,CAACQ,IAAvB,EAAJ;AACAf,cAAAA,SAAS,CAACgB,IAAV;AACH;;AA/CS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAmDAnB,MAAM,CAAC+B,SAAP,CAAiB,YAAM;AACnB;AACA5B,EAAAA,SAAS,CAACgB,IAAV;AACH,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login'] // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n    // start progress bar\n    NProgress.start()\n\n    // set page title\n    document.title = getPageTitle(to.meta.title)\n\n    // determine whether the user has logged in\n    const hasToken = getToken()\n\n    if (hasToken) {\n        if (to.path === '/login') {\n            // if is logged in, redirect to the home page\n            next({ path: '/' })\n            NProgress.done()\n        } else {\n            const hasGetUserInfo = store.getters.name\n            if (hasGetUserInfo) {\n                next()\n            } else {\n                try {\n                    // get user info\n                    if (store.getters.routes.length === 0) {\n                        const { roles } = await store.dispatch('user/getInfo')\n                        const accessRoutes = await store.dispatch('permission/generateRoutes', roles)\n                        router.addRoutes(accessRoutes)\n                        next()\n                    }\n                } catch (error) {\n                    // remove token and go to login page to re-login\n                    await store.dispatch('user/resetToken')\n                    Message.error(error || 'Has Error')\n                    next(`/login?redirect=${to.path}`)\n                    NProgress.done()\n                }\n            }\n        }\n    } else {\n        /* has no token*/\n\n        if (whiteList.indexOf(to.path) !== -1) {\n            // in the free login whitelist, go directly\n            next()\n        } else {\n            // other pages that do not have permission to access are redirected to the login page.\n            next(`/login?redirect=${to.path}`)\n            NProgress.done()\n        }\n    }\n})\n\nrouter.afterEach(() => {\n    // finish progress bar\n    NProgress.done()\n})\n"]}]}