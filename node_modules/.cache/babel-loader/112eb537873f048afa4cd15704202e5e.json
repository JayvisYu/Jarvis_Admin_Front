{"remainingRequest":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/store/modules/permission.js","dependencies":[{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/store/modules/permission.js","mtime":1627014663614},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2phcnZpc3l1LzA1X2hvYmJpZXMvSmFydmlzX0FkbWluL2Zyb250ZW5kL3Z1ZS1hZG1pbi10ZW1wbGF0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBhc3luY1JvdXRlcywgY29uc3RhbnRSb3V0ZXMgfSBmcm9tICdAL3JvdXRlcic7Ci8qKgogKiBVc2UgbWV0YS5yb2xlIHRvIGRldGVybWluZSBpZiB0aGUgY3VycmVudCB1c2VyIGhhcyBwZXJtaXNzaW9uCiAqIEBwYXJhbSByb2xlcwogKiBAcGFyYW0gcm91dGUKICovCgpmdW5jdGlvbiBoYXNQZXJtaXNzaW9uKHJvbGVzLCByb3V0ZSkgewogIGlmIChyb3V0ZS5tZXRhICYmIHJvdXRlLm1ldGEucm9sZXMpIHsKICAgIHJldHVybiByb2xlcy5zb21lKGZ1bmN0aW9uIChyb2xlKSB7CiAgICAgIHJldHVybiByb3V0ZS5tZXRhLnJvbGVzLmluY2x1ZGVzKHJvbGUpOwogICAgfSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiB0cnVlOwogIH0KfQovKioKICogRmlsdGVyIGFzeW5jaHJvbm91cyByb3V0aW5nIHRhYmxlcyBieSByZWN1cnNpb24KICogQHBhcmFtIHJvdXRlcyBhc3luY1JvdXRlcwogKiBAcGFyYW0gcm9sZXMKICovCgoKZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckFzeW5jUm91dGVzKHJvdXRlcywgcm9sZXMpIHsKICB2YXIgcmVzID0gW107CiAgcm91dGVzLmZvckVhY2goZnVuY3Rpb24gKHJvdXRlKSB7CiAgICB2YXIgdG1wID0gX29iamVjdFNwcmVhZCh7fSwgcm91dGUpOwoKICAgIGlmIChoYXNQZXJtaXNzaW9uKHJvbGVzLCB0bXApKSB7CiAgICAgIGlmICh0bXAuY2hpbGRyZW4pIHsKICAgICAgICB0bXAuY2hpbGRyZW4gPSBmaWx0ZXJBc3luY1JvdXRlcyh0bXAuY2hpbGRyZW4sIHJvbGVzKTsKICAgICAgfQoKICAgICAgcmVzLnB1c2godG1wKTsKICAgIH0KICB9KTsKICByZXR1cm4gcmVzOwp9CnZhciBzdGF0ZSA9IHsKICByb3V0ZXM6IFtdLAogIGFkZFJvdXRlczogW10KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBTRVRfUk9VVEVTOiBmdW5jdGlvbiBTRVRfUk9VVEVTKHN0YXRlLCByb3V0ZXMpIHsKICAgIHN0YXRlLmFkZFJvdXRlcyA9IHJvdXRlczsKICAgIHN0YXRlLnJvdXRlcyA9IGNvbnN0YW50Um91dGVzLmNvbmNhdChyb3V0ZXMpOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZ2VuZXJhdGVSb3V0ZXM6IGZ1bmN0aW9uIGdlbmVyYXRlUm91dGVzKF9yZWYsIHJvbGVzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgdmFyIGFjY2Vzc2VkUm91dGVzOwoKICAgICAgaWYgKHJvbGVzLmluY2x1ZGVzKCdhZG1pbicpKSB7CiAgICAgICAgdmFyIGFyciA9IFtdOwogICAgICAgIGFzeW5jUm91dGVzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGlmIChpdGVtLmhhc093blByb3BlcnR5KCdtZXRhJykpIHsKICAgICAgICAgICAgaWYgKGl0ZW0ubWV0YS5oYXNPd25Qcm9wZXJ0eSgncm9sZXMnKSkgewogICAgICAgICAgICAgIGlmIChpdGVtLm1ldGEucm9sZXMuaW5jbHVkZXMoJ2FkbWluJykpIHsKICAgICAgICAgICAgICAgIGFyci5wdXNoKGl0ZW0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGFjY2Vzc2VkUm91dGVzID0gYXJyIHx8IFtdOwogICAgICB9IGVsc2UgewogICAgICAgIGFjY2Vzc2VkUm91dGVzID0gZmlsdGVyQXN5bmNSb3V0ZXMoYXN5bmNSb3V0ZXMsIHJvbGVzKTsKICAgICAgICBjb25zb2xlLmxvZyhhY2Nlc3NlZFJvdXRlcyk7CiAgICAgIH0KCiAgICAgIGNvbW1pdCgnU0VUX1JPVVRFUycsIGFjY2Vzc2VkUm91dGVzKTsKICAgICAgcmVzb2x2ZShhY2Nlc3NlZFJvdXRlcyk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/store/modules/permission.js"],"names":["asyncRoutes","constantRoutes","hasPermission","roles","route","meta","some","role","includes","filterAsyncRoutes","routes","res","forEach","tmp","children","push","state","addRoutes","mutations","SET_ROUTES","concat","actions","generateRoutes","commit","Promise","resolve","accessedRoutes","arr","item","hasOwnProperty","console","log","namespaced"],"mappings":"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","sourcesContent":["import { asyncRoutes, constantRoutes } from '@/router'\n\n/**\n * Use meta.role to determine if the current user has permission\n * @param roles\n * @param route\n */\nfunction hasPermission(roles, route) {\n    if (route.meta && route.meta.roles) {\n        return roles.some(role => route.meta.roles.includes(role))\n    } else {\n        return true\n    }\n}\n\n/**\n * Filter asynchronous routing tables by recursion\n * @param routes asyncRoutes\n * @param roles\n */\nexport function filterAsyncRoutes(routes, roles) {\n    const res = []\n\n    routes.forEach(route => {\n        const tmp = { ...route }\n        if (hasPermission(roles, tmp)) {\n            if (tmp.children) {\n                tmp.children = filterAsyncRoutes(tmp.children, roles)\n            }\n            res.push(tmp)\n        }\n    })\n\n    return res\n}\n\nconst state = {\n    routes: [],\n    addRoutes: []\n}\n\nconst mutations = {\n    SET_ROUTES: (state, routes) => {\n        state.addRoutes = routes\n        state.routes = constantRoutes.concat(routes)\n    }\n}\n\nconst actions = {\n    generateRoutes({ commit }, roles) {\n        return new Promise(resolve => {\n            let accessedRoutes\n            if (roles.includes('admin')) {\n                var arr = []\n                asyncRoutes.forEach((item) => {\n                    if (item.hasOwnProperty('meta')) {\n                        if (item.meta.hasOwnProperty('roles')) {\n                            if (item.meta.roles.includes('admin')) {\n                                arr.push(item)\n                            }\n                        }\n                    }\n                })\n                accessedRoutes = arr || []\n            } else {\n                accessedRoutes = filterAsyncRoutes(asyncRoutes, roles)\n                console.log(accessedRoutes);\n            }\n            commit('SET_ROUTES', accessedRoutes)\n            resolve(accessedRoutes)\n        })\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}\n"]}]}