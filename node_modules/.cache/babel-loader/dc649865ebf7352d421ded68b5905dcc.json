{"remainingRequest":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/utils/request.js","dependencies":[{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/utils/request.js","mtime":1626612280953},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZQoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIC8vIGJhc2VVUkw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEksIC8vIHVybCA9IGJhc2UgdXJsICsgcmVxdWVzdCB1cmwKICBiYXNlVVJMOiAnL2FwaScsCiAgLy8gd2l0aENyZWRlbnRpYWxzOiB0cnVlLCAvLyBzZW5kIGNvb2tpZXMgd2hlbiBjcm9zcy1kb21haW4gcmVxdWVzdHMKICB0aW1lb3V0OiA1MDAwIC8vIHJlcXVlc3QgdGltZW91dAoKfSk7IC8vIHJlcXVlc3QgaW50ZXJjZXB0b3IKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyBkbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAogIGlmIChzdG9yZS5nZXR0ZXJzLnRva2VuKSB7CiAgICAvLyBsZXQgZWFjaCByZXF1ZXN0IGNhcnJ5IHRva2VuCiAgICAvLyBbJ1gtVG9rZW4nXSBpcyBhIGN1c3RvbSBoZWFkZXJzIGtleQogICAgLy8gcGxlYXNlIG1vZGlmeSBpdCBhY2NvcmRpbmcgdG8gdGhlIGFjdHVhbCBzaXR1YXRpb24KICAgIC8vIGNvbnNvbGUubG9nKHN0b3JlLmdldHRlcnMudG9rZW4pOwogICAgY29uZmlnLmhlYWRlcnNbJ0F1dGhlbnRpY2F0ZSddID0gZ2V0VG9rZW4oKTsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIGRvIHNvbWV0aGluZyB3aXRoIHJlcXVlc3QgZXJyb3IKICAvLyBjb25zb2xlLmxvZyhlcnJvcikgLy8gZm9yIGRlYnVnCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCi8qKgogKiBJZiB5b3Ugd2FudCB0byBnZXQgaHR0cCBpbmZvcm1hdGlvbiBzdWNoIGFzIGhlYWRlcnMgb3Igc3RhdHVzCiAqIFBsZWFzZSByZXR1cm4gIHJlc3BvbnNlID0+IHJlc3BvbnNlCiAqLwoKLyoqCiAqIERldGVybWluZSB0aGUgcmVxdWVzdCBzdGF0dXMgYnkgY3VzdG9tIGNvZGUKICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUKICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQogKi8KZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpCiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vIGlmIHRoZSBjdXN0b20gY29kZSBpcyBub3QgMjAwMDAsIGl0IGlzIGp1ZGdlZCBhcyBhbiBlcnJvci4KCiAgaWYgKHJlcy5jb2RlICE9PSAyMDApIHsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMubWVzc2FnZSB8fCAnRXJyb3InLAogICAgICB0eXBlOiAnZXJyb3InLAogICAgICBkdXJhdGlvbjogNSAqIDEwMDAKICAgIH0pOyAvLyA1MDg6IElsbGVnYWwgdG9rZW47IDUxMjogT3RoZXIgY2xpZW50cyBsb2dnZWQgaW47IDUxNDogVG9rZW4gZXhwaXJlZDsKCiAgICBpZiAocmVzLmNvZGUgPT09IDUwOCB8fCByZXMuY29kZSA9PT0gNTEyIHx8IHJlcy5jb2RlID09PSA1MTQpIHsKICAgICAgLy8gdG8gcmUtbG9naW4KICAgICAgTWVzc2FnZUJveC5jb25maXJtKCdZb3UgaGF2ZSBiZWVuIGxvZ2dlZCBvdXQsIHlvdSBjYW4gY2FuY2VsIHRvIHN0YXkgb24gdGhpcyBwYWdlLCBvciBsb2cgaW4gYWdhaW4nLCAnQ29uZmlybSBsb2dvdXQnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdSZS1Mb2dpbicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbCcsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHN0b3JlLmRpc3BhdGNoKCd1c2VyL3Jlc2V0VG9rZW4nKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5tZXNzYWdlIHx8ICdFcnJvcicpKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHJlczsKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKICAvLyBNZXNzYWdlKHsKICAvLyAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKICAvLyAgICAgdHlwZTogJ2Vycm9yJywKICAvLyAgICAgZHVyYXRpb246IDUgKiAxMDAwCiAgLy8gfSkKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/utils/request.js"],"names":["axios","MessageBox","Message","store","getToken","service","create","baseURL","timeout","interceptors","request","use","config","getters","token","headers","error","Promise","reject","response","res","data","code","message","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload","Error","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,MAFgB;AAGzB;AACAC,EAAAA,OAAO,EAAE,IAJgB,CAIX;;AAJW,CAAb,CAAhB,C,CAOA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN;AAEA,MAAIT,KAAK,CAACU,OAAN,CAAcC,KAAlB,EAAyB;AACrB;AACA;AACA;AACA;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,cAAf,IAAiCX,QAAQ,EAAzC;AACH;;AACD,SAAOQ,MAAP;AACH,CAZL,EAaI,UAAAI,KAAK,EAAI;AACL;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjBL,E,CAoBA;;AACAX,OAAO,CAACI,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B;AACI;AACJ;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACI,UAAAQ,QAAQ,EAAI;AACR;AACA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB,CAFQ,CAIR;;AACA,MAAID,GAAG,CAACE,IAAJ,KAAa,GAAjB,EAAsB;AAClBpB,IAAAA,OAAO,CAAC;AACJqB,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAAJ,IAAe,OADpB;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP,CADkB,CAOlB;;AACA,QAAIL,GAAG,CAACE,IAAJ,KAAa,GAAb,IAAoBF,GAAG,CAACE,IAAJ,KAAa,GAAjC,IAAwCF,GAAG,CAACE,IAAJ,KAAa,GAAzD,EAA8D;AAC1D;AACArB,MAAAA,UAAU,CAACyB,OAAX,CAAmB,gFAAnB,EAAqG,gBAArG,EAAuH;AACnHC,QAAAA,iBAAiB,EAAE,UADgG;AAEnHC,QAAAA,gBAAgB,EAAE,QAFiG;AAGnHJ,QAAAA,IAAI,EAAE;AAH6G,OAAvH,EAIGK,IAJH,CAIQ,YAAM;AACV1B,QAAAA,KAAK,CAAC2B,QAAN,CAAe,iBAAf,EAAkCD,IAAlC,CAAuC,YAAM;AACzCE,UAAAA,QAAQ,CAACC,MAAT;AACH,SAFD;AAGH,OARD;AASH;;AACD,WAAOf,OAAO,CAACC,MAAR,CAAe,IAAIe,KAAJ,CAAUb,GAAG,CAACG,OAAJ,IAAe,OAAzB,CAAf,CAAP;AACH,GArBD,MAqBO;AACH,WAAOH,GAAP;AACH;AACJ,CAxCL,EAyCI,UAAAJ,KAAK,EAAI;AACLkB,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQnB,KAApB,EADK,CACsB;AAC3B;AACA;AACA;AACA;AACA;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjDL;AAoDA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n    // baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\n    baseURL: '/api',\n    // withCredentials: true, // send cookies when cross-domain requests\n    timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n    config => {\n        // do something before request is sent\n\n        if (store.getters.token) {\n            // let each request carry token\n            // ['X-Token'] is a custom headers key\n            // please modify it according to the actual situation\n            // console.log(store.getters.token);\n            config.headers['Authenticate'] = getToken()\n        }\n        return config\n    },\n    error => {\n        // do something with request error\n        // console.log(error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n    /**\n     * If you want to get http information such as headers or status\n     * Please return  response => response\n     */\n\n    /**\n     * Determine the request status by custom code\n     * Here is just an example\n     * You can also judge the status by HTTP Status Code\n     */\n    response => {\n        // console.log(response)\n        const res = response.data\n\n        // if the custom code is not 20000, it is judged as an error.\n        if (res.code !== 200) {\n            Message({\n                message: res.message || 'Error',\n                type: 'error',\n                duration: 5 * 1000\n            })\n\n            // 508: Illegal token; 512: Other clients logged in; 514: Token expired;\n            if (res.code === 508 || res.code === 512 || res.code === 514) {\n                // to re-login\n                MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n                    confirmButtonText: 'Re-Login',\n                    cancelButtonText: 'Cancel',\n                    type: 'warning'\n                }).then(() => {\n                    store.dispatch('user/resetToken').then(() => {\n                        location.reload()\n                    })\n                })\n            }\n            return Promise.reject(new Error(res.message || 'Error'))\n        } else {\n            return res\n        }\n    },\n    error => {\n        console.log('err' + error) // for debug\n        // Message({\n        //     message: error.message,\n        //     type: 'error',\n        //     duration: 5 * 1000\n        // })\n        return Promise.reject(error)\n    }\n)\n\nexport default service\n"]}]}