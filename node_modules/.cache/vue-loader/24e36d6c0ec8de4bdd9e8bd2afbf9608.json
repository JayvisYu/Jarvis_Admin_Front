{"remainingRequest":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/views/stock/components/TimingDetail.vue?vue&type=template&id=763d9291&scoped=true&","dependencies":[{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/views/stock/components/TimingDetail.vue","mtime":1640442024840},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}