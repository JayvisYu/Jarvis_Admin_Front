{"remainingRequest":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/views/stock/select.vue?vue&type=template&id=5e63b4af&scoped=true&","dependencies":[{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/src/views/stock/select.vue","mtime":1639906219645},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jarvisyu/05_hobbies/Jarvis_Admin/frontend/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}